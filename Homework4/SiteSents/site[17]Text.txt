               Google Tag Manager (noscript)       End Google Tag Manager (noscript)      BT          #######  SITE START #########               Learn the emerging software trends you should pay attention to. Attend online QCon Plus (Nov 29 - Dec 9, 2022). Register Now                                  Close                                  Toggle Navigation                                     Facilitating the Spread of Knowledge and Innovation in Professional Software Development                          English edition              English edition   Chinese edition   Japanese edition   French edition                                        Write for InfoQ                                  Search                   Sign Up / Login                         Email         Password             Forgot password ? InfoQ Account Email             Back to login           Resend Activation             Back to login           Login with:     Google   Microsoft   Twitter   Facebook         Don't have an InfoQ account? Sign Up                                                Logo - Back to homepage                                          2,159,737 Sep unique visitors         News   Articles   Presentations   Podcasts   Guides         Topics       Development       Java   Kotlin   .Net   C#   Swift   Go   Rust   JavaScript           Featured in  Development                 Comparison of Performance of Multiple CPU Architectures     Matthew Singer and Jeff Balk discuss similiarities and differences among multiple high performing CPU architectures. All in  development           Architecture & Design       Architecture   Enterprise Architecture   Scalability/Performance   Design   Case Studies   Microservices   Service Mesh   Patterns   Security           Featured in  Architecture & Design                 Shopify’s Architecture to Handle the World’s Biggest Flash Sales     Bart de Water walks through how Shopify works under the hood, diving into their multi-tenant architecture that allows them to prevent failures and prepare for a multi-flash sale event: Black Friday. All in  architecture-design           AI, ML & Data Engineering       Big Data   Machine Learning   NoSQL   Database   Data Analytics   Streaming           Featured in  AI, ML & Data Engineering                 What You Should Know before Deploying ML in Production     Francesca Lazzeri shares an overview of the most popular MLOps tools and best practices, and presents a set of tips and tricks useful before deploying a solution in production. All in  ai-ml-data-eng           Culture & Methods       Agile   Diversity   Leadership   Lean/Kanban   Personal Growth   Scrum   Sociocracy   Software Craftmanship   Team Collaboration   Testing   UX           Featured in  Culture & Methods                 Breaking up Lyft’s Development Monolith     Jake Kaufman discusses how they use request context propagation to enable developers to safely share their staging environment. All in  culture-methods           DevOps       Infrastructure   Continuous Delivery   Automation   Containers   Cloud   Observability           Featured in  DevOps                 Building an Effective Incident Management Process     A good incident management framework can help organizations manage the chaos of an outage more effectively leading to shorter incident durations and tighter feedback loops. This article introduces the components necessary for a healthy incident management process. All in  devops           Events New           Helpful links                        About InfoQ                                     InfoQ Editors                                     Write for InfoQ                                     About C4Media                    Diversity           Choose your language     En   中文   日本   Fr                       QCon San Francisco   Understand the emerging software trends you should pay attention to. Attend in-person on Oct 24-28, 2022. QCon Plus   Make the right decisions by uncovering how senior software developers at early adopter companies are adopting emerging trends. Register Now. QCon London   Adopt the right emerging trends to solve your complex engineering challenges. Register Now. The Software Architects' Newsletter   Your monthly guide to all the topics, technologies and techniques that every professional needs to know about. Subscribe for free. #######  CONTENT START #########               InfoQ Homepage   News   Experiences from Failing with Microservices                 QCon San Francisco (Oct 24-28): Uncover emerging trends and practices from domain experts. Experiences from Failing with Microservices                    Like     Print   Bookmarks                         Aug 11, 2014                                                1          min read                        by             Jan Stenberg                 Write for InfoQ  Join a community of experts. Increase your visibility. Grow your career. Learn more            Start PSA Section     End PSA Section      While being a correct philosophy regarding service design and composition,  microservices  can quickly lead into trouble,  Richard Clayton , writes  providing  some observations and experiences from failing when implementing and maintaining a microservice architecture. Richard, Chief Software Engineer at Berico Technologies, emphasizes that his team did fail while developing microservices although most of the reasons for their failure were not related to technology and implementation practices. During the project Richard found five major factors contributing to the failure. Disagreement between developers   Different views within the team on the benefits of a microservice architecture versus a more traditional monolithic stack together with an encouraged democratic decision-making caused a lot of needless and time-consuming debate and also some emotional friction. Lack of skill among developers causing flawed implementations also led to loss of productivity. Service boundaries causing barriers   Dividing the backend into 8 separate services followed by a decision to assign services to people enforced ownership of specific services by developers. This led to developers complaining of their service being blocked by tasks on other services and refusing to help out by working with these blocking tasks. The separation also lead to developers losing sight of the overarching system goals, instead only focusing on the service they were working on. Independent services   Balancing the desire to share common utility code between services against independent services with replicated functionality became a huge tradeoff finally leading to a major refactoring. Failing to specify an API for each service, particularly the model passed between each service, lead to regular issues especially for the frontend developers, a problem still not solved. Not explicitly defining the services communication and using one mechanism for all use cases didn’t work well. Eventually they started moving towards a  CQRS  communication pattern, a work not yet fulfilled. Service granularity   Starting with 8 services was a too big change for the team; probably just a couple of services would have been a better start, eventually splitting individual services into a few microservices as the need arose. DevOps   Implementing a  Continuous Delivery  (CD) pipeline was probably where the team did the best, spending a lot of time learning a lot of lessons, e.g. the burden of maintaining many small services. Richards’s recommendation for teams starting with microservices includes ensuring the team has the skills needed, and taking a pragmatic approach, adapting to teams and customers capabilities. Inspired by this content? Write for InfoQ. Becoming an editor for InfoQ was one of the  best decisions of my career . It has challenged me and  helped me grow in so many ways . We'd love to have more people  join our team . Thomas Betts Lead Editor, Software Architecture and Design @InfoQ; Senior Principal Engineer     Write for InfoQ                           Rate this Article       Adoption                       Style                                                                        Author Contacted                                                                                             This content is in the  Architecture  topic                  Related Topics:       Architecture & Design       DevOps       Distributed Systems       Microservices       Infrastructure       Architecture                       Related Editorial             Related Sponsored Content                                            [eBook] The Practical Guide to Successful Data Mesh Implementations                                            Related Sponsor           Agile Lab's Data Mesh Boost platform. Supervise your mesh and speed up data product delivery. Request a Demo . Related Content             Microservices to Async Processing Migration at Scale                         Location, Location, Location: MVA Considerations for Distributed Processing and Data                         The InfoQ eMag: Modern Data Architectures, Pipelines, & Streams                         QCon Plus 2022: Join Us Virtually for Quality Content and Connections                   QCon Events 2022: Uncover Emerging Trends & Learn From Practitioners Driving Innovation in Software                   Cloudflare Open-Source Workerd Nanoservice Runtime Now in Beta                   Helidon 3.0 Introduces Project Starter and Requires Java 17 and Jakarta EE 9.1                   Jakarta EE 10 Delivers New Core Profile and Updates to Specifications                   Preventing Serverless Vendor Lock-in with Design Patterns                   Migrating Netflix's Viewing History from Synchronous Request-Response to Async Events                         Developing a Cloud-Native Application on Microsoft Azure Using Open Source Technologies                         Present and Future of the Microservice Architecture                         A Distributed Systems Approach to Decarbonizing the Grid                         Managing Tech Debt in a Microservice Architecture                         Getting Started to Quarkus Reactive Messaging with Apache Kafka                         Platform Engineering, DevOps, and Cognitive Load: a Summary of Community Discussions                   Building and Scaling Developer Environments at Stripe                         Undistro Wolfi Designed to Mitigate Software Supply Chain Risk                   Choosing the Right Cloud Infrastructure for Your SaaS Start-up                         Employing Team-Based Agile Coaching to Establish SRE in an Organization                         .NET MAUI Community Kit 1.3 Released                   Cloudflare Previews Globally Distributed Queues without Egress Fees                   Google Distroless Images Achieve SLSA Level 2                   Amazon File Cache Now Generally Available                   Spring Boot 3 Ships November 2022, Delays Java Module Support                   Breaking up Lyft’s Development Monolith                         Shopify’s Architecture to Handle the World’s Biggest Flash Sales                         MIT Technology Review Insights Survey on Zero Trust in Cybersecurity                   Confluent Introduces Stream Governance Advanced to Safely Extend Data Streaming Power                   What You Should Know before Deploying ML in Production                         GraphQL Caching on the Edge                         Reliable Continuous Testing Requires Automation                   Shift Left Approach for API Standardization                         Fitbit Health Solution and Google Cloud Introduce Device Connect for Fitbit                   Google AI Introduces TensorStore, a High-Performance Open-Source Library for Array Storage                   Transformers Can Mock Part of Human Brain                   Meta Launches New Chromium-Based WebView for Android                   How to Adapt to the New World of Work                         New JavaScript Interop Improvements in .NET 7 RC 1                   Confluent Ships Stream Designer Democratizing Data Streams                   The InfoQ  Newsletter             A round-up of last week’s content on InfoQ sent out every Tuesday. Join a community of over 250,000 senior developers. View an example           Enter your e-mail address                   Select your country     Select a country             I consent to InfoQ.com handling my data as explained in this  Privacy Notice . We protect your privacy. Hello stranger! You need to  Register an InfoQ account  or   Login  or login to post comments. But there's so much more behind being registered. Get the most out of the InfoQ experience. Tell us what you think                 Allowed html: a,b,br,blockquote,i,li,pre,u,ul,p              Email me replies to any of my messages in this thread                                                    Community comments       Watch thread           Problems with microservices just highlight hidden generic problems   by kem net ,        Re: Problems with microservices just highlight hidden generic problems   by Richard Clayton ,        Re: Problems with microservices just highlight hidden generic problems   by Jean-Jacques Dubray ,            Re: Problems with microservices just highlight hidden generic problems   by Igor Roháľ ,                Problems with microservices just highlight hidden generic problems   by                                          kem net ,                                                Your message is awaiting moderation. Thank you for participating in the discussion. This led to developers complaining of their service being blocked by tasks on other services and refusing to help out by working with these blocking tasks. program to an interface, not implementation, so use interface only to stub the service Failing to specify an API for each service, particularly the model passed between each service, lead to regular issues especially for the frontend developers, a problem still not solved. it's hard to decompose problems in effective way, but if you could not decompose it to a set of microservices it means that it was not decomposed before so it was highly coupled solution       Like   Reply       Back to top                       Re: Problems with microservices just highlight hidden generic problems   by                                          Richard Clayton ,                                                Your message is awaiting moderation. Thank you for participating in the discussion. To address your title, I would agree that many of our issues were generic problems that you might find in any implementation. However, these issues are compounded when you implement a Microservice architecture because you tend to have a lot more boundaries and contracts. There's nothing fundamentally new about Microservice architectures (except maybe their popularity), so of course the issues in implementing them are likewise not going to be very novel. Regarding your comment on interface-based development, we were not tightly coupled to an implementation as you are suggesting. The complaints about being blocked by tasks on other services were largely artificial. Often is had a lot to do with verification of the stated contracts between services. This issue could have been addressed if specifications were written in a way that they could have been automatically verified. To your second point, the issue was not one of composition but of actual specification. We did not use an IDL or schema technology (when we should have) and encountered a number of issues related to differences in interpretation of the contract. Like   Reply       Back to top                       Re: Problems with microservices just highlight hidden generic problems   by                                          Jean-Jacques Dubray ,                                                Your message is awaiting moderation. Thank you for participating in the discussion. "We did not use an IDL or schema technology (when we should have) and encountered a number of issues related to differences in interpretation of the contract." -> What a novel idea! I thought our industry was passed contracts / schemas, did I miss something? Like   Reply       Back to top                       Re: Problems with microservices just highlight hidden generic problems   by                                          Igor Roháľ ,                                                Your message is awaiting moderation. Thank you for participating in the discussion. program to an interface, not implementation, so use interface only to stub the service being the first client of other team's service can be a source of valuable feedback for that team       Like   Reply       Back to top                        reply box      Close             Your Reply       Quote original message                   Allowed html: a,b,br,blockquote,i,li,pre,u,ul,p              Email me replies to any of my messages in this thread                                                           Cancel                                 edit comment box      Close             Your Reply                   Allowed html: a,b,br,blockquote,i,li,pre,u,ul,p              Email me replies to any of my messages in this thread                                                             Cancel                                 notification popup      Close                             OK                          4                            Development           Comparison of Performance of Multiple CPU Architectures       Accelerate Your Growth and Build Better-Connected Teams at QCon San Francisco Oct 24-28, 2022       Amazon Switched Compression from Gzip to Zstd for Own Service Data               Architecture & Design           Shopify’s Architecture to Handle the World’s Biggest Flash Sales       The InfoQ eMag: Modern Data Architectures, Pipelines, & Streams       Frederic Branczyk on Continuous Profiling Leveraging eBPF               Culture & Methods           Breaking up Lyft’s Development Monolith       VR Environments for Collaborative Software Development       Reliable Continuous Testing Requires Automation               AI, ML & Data Engineering           Confluent Introduces Stream Governance Advanced to Safely Extend Data Streaming Power       What You Should Know before Deploying ML in Production       GraphQL Caching on the Edge               DevOps           Platform Engineering, DevOps, and Cognitive Load: a Summary of Community Discussions       Google Distroless Images Achieve SLSA Level 2       MIT Technology Review Insights Survey on Zero Trust in Cybersecurity                           The InfoQ  Newsletter     A round-up of last week’s content on InfoQ sent out every Tuesday. Join a community of over 250,000 senior developers. View an example       Get a quick overview of content published on a variety of innovator and early adopter technologies   Learn what you don’t know that you don’t know   Stay up to date with the latest information from the topics you are interested in           Enter your e-mail address                   Select your country     Select a country             I consent to InfoQ.com handling my data as explained in this  Privacy Notice . We protect your privacy. QCon Software Development Conference          Real-world technical talks. No product pitches. Practical ideas to inspire you and your team. QCon San Francisco - Oct 24-28, In-person. QCon San Francisco brings together the world's most innovative senior software engineers across multiple domains to share their real-world implementation of emerging trends and practices. Uncover emerging software trends and practices to solve your complex engineering challenges, without the product pitches. Save your spot now                   Home   Create account   Login   QCon Conferences   Events   Write for InfoQ   InfoQ Editors   About InfoQ   About C4Media                Media Kit            InfoQ Developer Marketing Blog   Diversity         Events           QCon San Francisco     OCTOBER 24-28, 2022             QCon Plus     NOVEMBER 29 - DECEMBER 9, 2022             QCon London     MARCH 27-31, 2023                    QCon San Francisco           OCTOBER 2-6, 2023             Follow us on      Youtube 212K Followers   Linkedin 18K Followers   RSS 19K Readers   Twitter 50k Followers   Facebook 20K Likes   Alexa New         Stay in the know     The InfoQ Podcast   Engineering Culture Podcast   The Software Architects' Newsletter                          General Feedback        feedback@infoq.com            Advertising        sales@infoq.com            Editorial        editors@infoq.com            Marketing        marketing@infoq.com           InfoQ.com and all content copyright © 2006-2022 C4Media Inc. InfoQ.com hosted at  Contegix , the best ISP we've ever worked with. Privacy Notice ,  Terms And Conditions ,  Cookie Policy              #######  SITE END #########         BT